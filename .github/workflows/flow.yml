name: CICD
on:
  push:
    branches: [ "main" ]
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      APP_NAME: cms
      PROJECT_DIR: /home/appsdocker/cms
    steps:
      - uses: actions/checkout@v4
      - name: Set Up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        run: |
            echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Set IMAGE_NAME based on branch
        id: set_image_name
        run: |
          if [ "${GITHUB_REF##*/}" == "production" ]; then
            MODE="production"
          elseif [ "${GITHUB_REF##*/}" == "uat]; then
            MODE="uat"
          else
            MODE="development"
          fi
          IMAGE_NAME="theaska18/$APP_NAME:$MODE"
          echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV  # Make IMAGE_NAME available to the following steps

      - name: Build and Push Docker Image
        run: |
          echo "Using image name: $IMAGE_NAME"
          docker build -t $IMAGE_NAME -f docker/Dockerfile .
          docker push $IMAGE_NAME
      - name : Deploy Server Data
        run: |
            apt-get update && apt-get install -y sshpass
            echo "$PROJECT_DIR"
            sshpass -p "${{ secrets.SERVER_PASSWORD }}" ssh -o StrictHostKeyChecking=no root@0.tcp.ap.ngrok.io -p 19059 "mkdir -p $PROJECT_DIR-$MODE"
            echo "$PROJECT_DIR"
            sshpass -p "${{ secrets.SERVER_PASSWORD }}" scp  -P 19059 -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no docker/docker-compose.yml root@0.tcp.ap.ngrok.io:$PROJECT_DIR-$MODE/docker-compose.yml
